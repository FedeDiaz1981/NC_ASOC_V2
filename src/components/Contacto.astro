---
/**
 * Contacto.astro (i18n)
 * - Columna izquierda (info) + derecha (form).
 * - Usa diccionario i18n: dictionaries[lang].contact
 */
import { dictionaries, type Locale } from "../i18n";

interface Props {
  lang?: Locale;
  // Si querés, podés seguir sobreescribiendo datos de contacto por props:
  email?: string;
  phone?: string;
  phone2?: string;
  addressHtml?: string;
  whatsapp?: { label: string; href: string }[];
}

const { lang = "es" } = Astro.props as Props;
const dict = dictionaries[lang].contact;

// Datos estáticos (podés seguir pasándolos por props si querés)
const {
  email = "estudionuevacelina@gmail.com",
  phone = "+54 9 11 3023 6775",
  phone2 = "+54 9 11 5617 0620",
  addressHtml = `General pintos 2830\nVilla Celina\nLa matanza,Bs.As.\nArgentina`,
  whatsapp = [
    { label: "+54 9 11 3023 6775", href: "https://wa.me/5491130236775" },
    { label: "+54 9 11 5617 0620", href: "https://wa.me/5491156170620" }
  ],
} = Astro.props as Props;
---

<section id="contacto" class="relative bg-hueso py-16">
  <div class="max-w-7xl mx-auto px-4">
    <div class="grid lg:grid-cols-2 gap-10">
      <!-- Columna izquierda: Info -->
      <div class="space-y-6 lg:pr-6 lg:border-r lg:border-azulAereo/20">
        <header>
          <h2 class="text-azulProfundo text-2xl font-bold tracking-wide uppercase">
            {dict.leftTitle}
          </h2>
        </header>

        <div class="text-azulProfundo/90 space-y-4 text-sm leading-relaxed">
          <p>
            {dict.leftDescription} <a class="uppercase font-semibold" href="#">{dict.click}</a>
          </p>
          <p>
            {dict.businessHours}<br />
            {phone}<br />
            {phone2}<br />
            <a class="underline hover:text-azulAereo" href={`mailto:${email}`}>{email}</a>
          </p>

          <div>
            <p class="font-semibold">{dict.viaWhatsApp}</p>
            <ul class="mt-2 space-y-1">
              {whatsapp.map((w) => (
                <li>
                  <a class="inline-flex items-center gap-2 text-azulAereo hover:underline" href={w.href} target="_blank" rel="noopener">
                    <span class="i bi-whatsapp"></span>{w.label}
                  </a>
                </li>
              ))}
            </ul>
          </div>

          <div>
            <p class="font-semibold">{dict.officeAddress}</p>
            <p set:html={addressHtml.replaceAll("\n", "<br/>")}></p>
          </div>
        </div>

        <!-- Agenda bloque (oculto por ahora) -->
        <div class="hidden pt-6 border-t border-azulAereo/15">
          <h3 class="text-azulProfundo text-xl font-semibold uppercase tracking-wide">{dict.bookOnline}</h3>
          <p class="mt-2 text-sm text-azulProfundo/80">{dict.bookOnlineDesc}</p>
          <div class="mt-4 flex gap-3">
            <img src="/images/gal-1.jpg" alt="Galería 1" class="h-14 w-20 object-cover rounded" />
            <img src="/images/gal-2.jpg" alt="Galería 2" class="h-14 w-20 object-cover rounded" />
            <img src="/images/gal-3.jpg" alt="Galería 3" class="h-14 w-20 object-cover rounded" />
            <img src="/images/gal-4.jpg" alt="Galería 4" class="h-14 w-20 object-cover rounded" />
          </div>
          <a href="/turnos" class="mt-5 inline-flex items-center justify-center rounded-full border border-azulAereo px-5 py-2 text-sm font-semibold text-azulAereo hover:bg-azulAereo hover:text-hueso transition">
            {dict.bookMe}
          </a>
        </div>
      </div>

      <!-- Columna derecha: Form -->
      <div class="lg:pl-6">
        <header>
          <h2 class="text-azulProfundo text-2xl font-bold tracking-wide uppercase">
            {dict.rightTitle}
          </h2>
          <p class="mt-2 text-xs text-azulProfundo/70">{dict.formLead}</p>
        </header>

        <form id="contactForm" class="mt-5 space-y-3" on:submit.prevent>
          <div class="grid sm:grid-cols-2 gap-3">
            <input name="nombre" placeholder={dict.labels.name} required class="w-full border border-azulAereo/25 focus:border-azulAereo outline-none rounded px-3 py-2 bg-white text-azulProfundo" />
            <input name="apellido" placeholder={dict.labels.lastname} required class="w-full border border-azulAereo/25 focus:border-azulAereo outline-none rounded px-3 py-2 bg-white text-azulProfundo" />
          </div>
          <input name="email" type="email" placeholder={dict.labels.email} required class="w-full border border-azulAereo/25 focus:border-azulAereo outline-none rounded px-3 py-2 bg-white text-azulProfundo" />
          <input name="telefono" placeholder={dict.labels.phone} class="w-full border border-azulAereo/25 focus:border-azulAereo outline-none rounded px-3 py-2 bg-white text-azulProfundo" />
          <textarea name="mensaje" placeholder={dict.labels.message} required class="w-full min-h-[120px] border border-azulAereo/25 focus:border-azulAereo outline-none rounded px-3 py-2 bg-white text-azulProfundo"></textarea>

          <div class="hidden flex items-center gap-2 text-xs text-azulProfundo/80">
            <label class="inline-flex items-center gap-2">
              <input type="checkbox" name="boletin" class="accent-azulAereo" />
              {dict.newsletter}
            </label>
            <label class="inline-flex items-center gap-2">
              <input type="checkbox" name="terminos" required class="accent-azulAereo" />
              {dict.terms}
            </label>
          </div>

          <!-- Honeypot -->
          <input type="text" name="sitio" class="hidden" tabindex="-1" autocomplete="off" />

          <div class="pt-2">
            <button
              id="sendBtn"
              data-send={dict.send}
              data-sending={dict.sending}
              class="w-full sm:w-auto inline-flex items-center justify-center gap-2 rounded-full bg-azulAereo text-hueso px-6 py-2 font-semibold hover:bg-beige hover:text-azulProfundo transition">
              {dict.send}
            </button>
          </div>

          <p id="formMsg" class="text-xs text-azulProfundo/70"></p>
        </form>
      </div>
    </div>
  </div>

  <script type="module">
    // @ts-check
    // @ts-ignore
    /** @type {HTMLFormElement | null} */ const form = document.getElementById('contactForm');
    // @ts-ignore
    /** @type {HTMLButtonElement | null} */ const btn  = document.getElementById('sendBtn');
    // @ts-ignore
    /** @type {HTMLParagraphElement | null} */ const msg  = document.getElementById('formMsg');

    if (form && btn && msg) {
      const TXT_SEND = btn.dataset.send || 'Enviar';
      const TXT_SENDING = btn.dataset.sending || 'Enviando...';

      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        msg.textContent = '';

        const fd = new FormData(form);
        const payload = Object.fromEntries(fd.entries());

        btn.disabled = true;
        btn.textContent = TXT_SENDING;

        try {
          const res  = await fetch('/api/contact', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(payload)
          });
          const json = await res.json();
          if (json.ok) {
            msg.textContent = "{{dict.success}}";
            form.reset();
          } else {
            msg.textContent = json.error || "{{dict.error}}";
          }
        } catch {
          msg.textContent = "{{dict.networkError}}";
        } finally {
          btn.disabled = false;
          btn.textContent = TXT_SEND;
        }
      });
    }
  </script>
</section>
